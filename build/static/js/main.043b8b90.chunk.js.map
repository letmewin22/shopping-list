{"version":3,"sources":["components/ListItem.tsx","store/appLoader.ts","components/Loader.tsx","store/ShoppingList.store.ts","context/ListContext.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ListItem","el","toggle","remove","className","checked","value","onClick","bind","aria-label","loading","makeAutoObservable","this","Loader","role","URL","ShoppingList","observable","shallow","action","newItem","a","trim","length","axios","post","res","status","list","data","body","console","log","message","delete","_id","filter","item","put","map","get","ListContext","React","createContext","shoppingList","ListContextProvider","children","Provider","useListContext","useContext","List","useState","itemsList","setItemsList","useEffect","getItems","appLoader","setLoader","toggleCheckHandler","toggleCheckItem","removeHandler","removeItem","App","input","setInput","onChangeHandler","e","target","createNewItem","addItem","keyPressHandler","key","onKeyDown","onChange","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.043b8b90.chunk.js","sourcesContent":["import React from 'react'\nimport { Observer } from 'mobx-react-lite'\nimport {IListItem} from '../interfaces/IListItem'\n\ntype ListItemProps = {\n  el: IListItem,\n  toggle: (el: IListItem) => Promise<void>\n  remove: (el: IListItem) => Promise<void>\n}\n\n\nconst ListItem = ({el, toggle, remove}: ListItemProps) => {\n\n  return (\n    <Observer>\n      {() => (\n        <li\n          className={`list-group-item shopping-list__item ${\n            el.checked && 'shopping-list__item--checked'\n          }`}\n        >\n          <span>{el.value}</span>\n          <div className='shopping-list__item-btns'>\n            <button\n              onClick={toggle.bind(null, el)}\n              aria-label='done'\n            >\n              <i className='green bi bi-bag-check'></i>\n            </button>\n            <button\n              onClick={remove.bind(null, el)}\n              aria-label='delete'\n            >\n              <i className='red bi bi-x-circle'></i>\n            </button>\n          </div>\n        </li>\n      )}\n    </Observer>\n  )\n}\n\nexport default ListItem\n","import {makeAutoObservable} from 'mobx'\n\nclass AppLoader {\n  loading: boolean = true\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  setLoader(value: boolean) {\n    this.loading = value\n  }\n}\n\nexport default new AppLoader()\n","import React from 'react'\n\nexport const Loader = () => {\n  return (\n    <div className='spinner-border' role='status'>\n      <span className='visually-hidden'>Loading...</span>\n    </div>\n  )\n}\n","import {observable, action} from 'mobx'\nimport axios from 'axios'\nimport {IListItem} from '../interfaces/IListItem'\n\nconst URL = 'https://mysterious-caverns-45772.herokuapp.com'\n\nclass ShoppingList {\n  @observable.shallow list: IListItem[] = []\n\n  @action\n  addItem = async (newItem: IListItem) => {\n    if (newItem.value.trim().length > 0) {\n      try {\n        const res = await axios.post(`${URL}/api/list/`, newItem)\n\n        if (res.status === 201) {\n          this.list = [...this.list, res.data.body]\n        }\n      } catch (e) {\n        console.log(e.message)\n      }\n    }\n  }\n\n  @action\n  removeItem = async (el: IListItem) => {\n    try {\n      await axios.delete(`${URL}/api/list/${el._id}`)\n      this.list = this.list.filter(item => item !== el)\n    } catch (e) {\n      console.log(e.message)\n    }\n  }\n\n  @action\n  toggleCheckItem = async (el: IListItem) => {\n    try {\n      const res = await axios.put(`${URL}/api/list/${el._id}`, {\n        checked: !el.checked ? (el.checked = true) : (el.checked = false),\n      })\n\n      this.list = this.list.map(item => {\n        if (item._id === res.data._id) {\n          return (item = res.data)\n        }\n        return item\n      })\n    } catch (e) {\n      console.log(e.message)\n    }\n  }\n\n  @action\n  getItems = async () => {\n    try {\n      const {data} = await axios.get(`${URL}/api/list/`)\n      this.list = data\n    } catch (e) {\n      console.log(e.message)\n    }\n  }\n}\n\nexport default ShoppingList\n","import React from 'react'\nimport ShoppingList from '../store/ShoppingList.store'\n\ntype ListContentValue = {\n  shoppingList: ShoppingList\n}\n\nconst ListContext = React.createContext<ListContentValue>(\n  {} as ListContentValue\n)\n\nconst shoppingList = new ShoppingList()\n\nexport const ListContextProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return (\n    <ListContext.Provider value={{shoppingList}}>\n      {children}\n    </ListContext.Provider>\n  )\n}\n\nexport const useListContext = () => React.useContext(ListContext)","import React, {useState, useEffect} from 'react'\nimport {Observer} from 'mobx-react-lite'\nimport ListItem from './ListItem'\nimport appLoader from '../store/appLoader'\nimport {Loader} from './Loader'\nimport {useListContext} from '../context/ListContext'\nimport { IListItem } from '../interfaces/IListItem'\n\nconst List = () => {\n  const {shoppingList} = useListContext()\n  const [itemsList, setItemsList] = useState([] as IListItem[])\n\n  useEffect(() => {\n    const getItems = async() => {\n      await shoppingList.getItems()\n      setItemsList(shoppingList.list)\n      appLoader.setLoader(false)\n    }\n    getItems()\n  }, [shoppingList])\n\n  useEffect(() => {\n    setItemsList(shoppingList.list)\n  }, [shoppingList.list])\n\n  const toggleCheckHandler = async (el: IListItem) => {\n    await shoppingList.toggleCheckItem(el)\n    setItemsList(shoppingList.list)\n  }\n\n  const removeHandler = async (el: IListItem) => {\n    await shoppingList.removeItem(el)\n    setItemsList(shoppingList.list)\n  }\n\n\n  return (\n    <Observer>\n      {() => (\n        <ul className='list-group shopping-list'>\n          {appLoader.loading && (<Loader/>)}\n          {itemsList.map(el => (\n            <ListItem \n            key={el._id} \n            el={el} \n            toggle={toggleCheckHandler} \n            remove={removeHandler} \n            />\n          ))}\n          {!itemsList.length && !appLoader.loading && (\n            <span>Список покупок пуст</span>\n          )}\n        </ul>\n      )}\n    </Observer>\n  )\n}\n\nexport default List\n","import React, {useState} from 'react'\nimport {Observer} from 'mobx-react-lite'\nimport List from './components/List'\nimport {IListItem} from './interfaces/IListItem'\nimport './App.css'\nimport { useListContext } from './context/ListContext'\n\nconst App = () => {\n  const [input, setInput] = useState('')\n  const {shoppingList} = useListContext()\n\n\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value)\n  }\n\n  const createNewItem = async () => {\n    const newItem: IListItem = {\n      checked: false,\n      value: input,\n    }\n\n    await shoppingList.addItem(newItem)\n    setInput('')\n  }\n\n  const keyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      createNewItem()\n    }\n  }\n\n  return (\n    <Observer>\n    {() => (\n    <div className='App'>\n      <h1>Список покупок</h1>\n      <div className='add-item-input'>\n        <input\n          value={input}\n          onKeyDown={keyPressHandler}\n          onChange={onChangeHandler}\n          className='form-control list-input'\n          type='text'\n          placeholder='Введи что нужно купить'\n          aria-label='input'\n        />\n        <button onClick={createNewItem} type='button' className='btn btn-primary add-btn'>\n          <i className=\"bi bi-plus\"></i>\n        </button>\n      </div>\n      <List />\n    </div>\n    )}\n    </Observer>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ListContextProvider } from './context/ListContext';\n\nReactDOM.render(\n  <ListContextProvider>\n    <App />\n  </ListContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}