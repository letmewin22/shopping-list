{"version":3,"sources":["store/shoppingList.ts","store/appLoader.ts","components/ListItem.tsx","components/Loader.tsx","components/List.tsx","utils/keysGenerator.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["list","makeAutoObservable","this","newItem","value","trim","length","setItems","el","filter","item","map","checked","JSON","parse","localStorage","getItem","setItem","stringify","loading","observer","className","onClick","shoppingList","toggleCheckItem","aria-label","removeItem","Loader","role","appLoader","_id","keysGenerator","result","characters","charactersLength","i","charAt","Math","floor","random","useState","input","setInput","useEffect","getItems","setLoader","createNewItem","addItem","onKeyDown","e","key","onChange","target","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b95d2d2.chunk.js","sourcesContent":["import {makeAutoObservable} from 'mobx'\nimport {IListItem} from '../interfaces/IListItem'\n\nclass ShoppingList {\n  list: IListItem[] = []\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  addItem(newItem: IListItem) {\n    if (newItem.value.trim().length > 0) {\n      this.list = [...this.list, newItem]\n      this.setItems()\n    }\n  }\n\n  removeItem(el: IListItem) {\n    this.list = this.list.filter(item => item !== el)\n    this.setItems()\n  }\n\n  toggleCheckItem(el: IListItem) {\n    this.list = this.list.map(item => {\n      if (item === el) {\n        !item.checked ? (item.checked = true) : (item.checked = false)\n      }\n      return item\n    })\n    this.setItems()\n  }\n\n  getItems() {\n    this.list = JSON.parse(localStorage.getItem('shopping-list') || '[]')\n    this.setItems()\n  }\n\n  setItems() {\n    localStorage.setItem('shopping-list', JSON.stringify(this.list))\n  }\n}\n\nexport default new ShoppingList()\n","import {makeAutoObservable} from 'mobx'\n\nclass AppLoader {\n  loading: boolean = true\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  setLoader(value: boolean) {\n    this.loading = value\n  }\n}\n\nexport default new AppLoader()\n","import React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport shoppingList from '../store/shoppingList'\nimport {IListItem} from '../interfaces/IListItem'\n\ntype ListItemProps = {\n  el: IListItem\n}\n\nconst ListItem = ({el}: ListItemProps) => {\n\n  return (\n    <li className={`list-group-item shopping-list__item ${el.checked && 'shopping-list__item--checked'}`}>\n      <span>{el.value}</span>\n      <div className='shopping-list__item-btns'>\n        <button\n          onClick={() => shoppingList.toggleCheckItem(el)}\n          aria-label='done'\n        >\n          <i className='green bi bi-bag-check'></i>\n        </button>\n        <button\n          onClick={() => shoppingList.removeItem(el)}\n          aria-label='delete'\n        >\n          <i className='red bi bi-x-circle'></i>\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default observer(ListItem)","import React from 'react'\n\nexport const Loader = () => {\n  return (\n    <div className='spinner-border' role='status'>\n      <span className='visually-hidden'>Loading...</span>\n    </div>\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react-lite'\nimport ListItem from './ListItem'\nimport shoppingList from '../store/shoppingList'\nimport appLoader from '../store/appLoader'\nimport { Loader } from './Loader'\n\nconst List = () => {\n\n  const { list } = shoppingList\n  return (\n    <ul className='list-group shopping-list'>\n    {appLoader.loading && (<Loader/>)}\n    {list.map(el => (\n      <ListItem key={el._id} el={el} />\n    ))}\n    {!list.length && !appLoader.loading && (<span>Список покупок пуст</span>)}\n  </ul>\n  )\n}\n\nexport default observer(List)\n","export const keysGenerator = (length: number): string => {\r\n  let result = ''\r\n  const characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  const charactersLength = characters.length\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n  }\r\n  return result\r\n}\r\n","import React, {useState, useEffect} from 'react'\nimport {observer} from 'mobx-react-lite'\nimport shoppingList from './store/shoppingList'\nimport appLoader from './store/appLoader'\nimport List from './components/List'\nimport {keysGenerator} from './utils/keysGenerator'\nimport {IListItem} from './interfaces/IListItem'\nimport './App.css'\n\nconst App = () => {\n  const [input, setInput] = useState('')\n\n  useEffect(() => {\n    shoppingList.getItems()\n    appLoader.setLoader(false)\n  }, [])\n\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value)\n  }\n\n  const createNewItem = () => {\n    const newItem: IListItem = {\n      _id: keysGenerator(8),\n      checked: false,\n      value: input,\n    }\n\n    shoppingList.addItem(newItem)\n    setInput('')\n  }\n\n  const keyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      createNewItem()\n    }\n  }\n\n  return (\n    <div className='App'>\n      <h1>Список покупок</h1>\n      <div className='add-item-input'>\n        <input\n          value={input}\n          onKeyDown={keyPressHandler}\n          onChange={onChangeHandler}\n          className='form-control list-input'\n          type='text'\n          placeholder='Введи что нужно купить'\n          aria-label='input'\n        />\n        <button onClick={createNewItem} type='button' className='btn btn-primary add-btn'>\n          <i className=\"bi bi-plus\"></i>\n        </button>\n      </div>\n      <List />\n    </div>\n  )\n}\n\nexport default observer(App)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}